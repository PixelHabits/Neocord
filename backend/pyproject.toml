[project]
name = "backend"
version = "0.1.0"
description = "Flask-based backend API for Neocord - a modern real-time communication platform. Features user authentication, instant messaging, community server management, and channel organization. Built with SQLAlchemy and Alembic for robust data management and migrations."
readme = "README.md"
requires-python = ">=3.9"

# Core dependencies grouped by purpose
dependencies = [
    # Flask and Extensions
    "flask==2.2.2",
    "flask-cors==3.0.10",
    "flask-login==0.6.2",
    "flask-migrate==4.0.2",
    "flask-sqlalchemy==3.0.2",
    "flask-wtf==1.1.1",
    "werkzeug==2.2.2",

    # Database and ORM
    "sqlalchemy==1.4.46",
    "alembic==1.9.2",
    "greenlet==3.0.1",

    # Server
    "gunicorn==20.1.0",

    # Utilities
    "click==8.1.3",
    "itsdangerous==2.1.2",
    "python-dotenv==0.21.0",
    "python-dateutil==2.8.2",

    # Template Engine
    "jinja2==3.1.2",
    "mako==1.2.4",
    "markupsafe==2.1.2",

    # Forms and Validation
    "wtforms==3.0.1",
    
    # Misc
    "python-editor==1.0.4",
    "six==1.16.0",

    # Database Drivers
    "psycopg2-binary>=2.9.10",
]

[dependency-groups]
dev = [
    "ruff>=0.7.3",
]

# Tool configurations
[tool.uv]
package = false

[tool.ruff.format]
quote-style = "single"
indent-style = "tab"

[tool.ruff.lint]
select = [
    "B",   # flake8-bugbear: finds likely bugs and design problems 
    "D",   # flake8-docstrings: enforces docstring conventions
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "W",   # pycodestyle warnings
    "C4",  # flake8-comprehensions
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "RUF", # Ruff-specific rules
]

# Ignore rules that conflict with tabs
ignore = [
    "W191",  # indentation contains tabs
    "D206",  # indent with spaces not tabs
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
combine-as-imports = true
known-first-party = ["backend"]
